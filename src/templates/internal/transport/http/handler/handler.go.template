package handler

import (
	"{{MODULE_NAME}}/internal/service"

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
)

type Handler struct {
	services *service.Service
}

func NewHandler(services *service.Service) *Handler {
	return &Handler{
		services: services,
	}
}

func (h *Handler) Init() *gin.Engine {
	router := gin.Default()

	corsConfig := cors.DefaultConfig()
	corsConfig.AllowAllOrigins = true
	corsConfig.AllowCredentials = true
	corsConfig.AddAllowHeaders("Origin", "Content-Length", "Content-Type", "Authorization")

	router.Use(cors.New(corsConfig))

	// Init router
	h.initAPI(router)

	return router
}

func (h *Handler) initAPI(router *gin.Engine) {

	v1 := router.Group("/v1")
	{
		// Remove this code
		example := v1.Group("/example_group")
		{
			example.POST("/example_create_method", h.exampleCreateMethod)
		}
	}
}